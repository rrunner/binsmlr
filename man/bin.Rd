% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constructor.R
\name{bin}
\alias{bin}
\title{A constructor to bin objects}
\usage{
bin(
  num_obl = integer(),
  num_def = integer(),
  min_score = double(),
  max_score = double(),
  ...
)
}
\arguments{
\item{num_obl}{An integer representing the number of obligors (customers).
This value must include both defaults and non-defaults.}

\item{num_def}{An integer representing the number of defaults. The defaults
is the stock of obligors that are (currently) in non-default state but
defaults at least once in the next 12-month period (typically).}

\item{min_score}{A double representing the minimum score.}

\item{max_score}{A double representing the maximum score.}

\item{...}{Optional parameters passed on to the constructor. Used internally
to set is_merged to TRUE as part of the merge functionality.}
}
\value{
An object of class bin. The structure of each bin is the
  following
  \describe{
    \item{num_obl}{The number of obligors (customers).}
    \item{num_def}{The number of defaults.}
    \item{dr}{The default rate.}
    \item{odds}{The odds ratio.}
    \item{min_score}{The minimum score.}
    \item{mid_score}{The midpoint score (simple average of \code{min_score}
      and \code{max_score}).}
    \item{max_score}{The maximum score.}
    \item{is_merged}{A boolean. TRUE indicates the bin has been merged with
  other bins. FALSE implies the bin is identical to the initialized bin. The
  merged status is visible in the print() output of bin objects.}
  }
}
\description{
A (helper) constructor to create objects of class bin. Each bin object
inherits from the class list.
}
\details{
Validation is performed on the arguments before passing on the values to the
constructor. Also, a print method exists for bin objects.
}
\examples{
# create a single bin object
single_bin <- bin(num_obl = 100, num_def = 5, min_score = 30, max_score = 60)
print(single_bin)

# create a list of bins
bins <- list(
          bin(num_obl = 100, num_def = 5, min_score = 30, max_score = 60),
          bin(num_obl = 200, num_def = 5, min_score = 61, max_score = 80)
          )
print(bins)
}
